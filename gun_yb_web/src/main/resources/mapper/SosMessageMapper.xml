<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybkj.gun.mapper.SosMessageMapper">
  <resultMap id="BaseResultMap" type="com.ybkj.gun.model.SosMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="latitude" jdbcType="CHAR" property="latitude" />
    <result column="longitude" jdbcType="CHAR" property="longitude" />
    <result column="gun_imei" jdbcType="CHAR" property="gunImei" />
    <result column="gun_mac" jdbcType="CHAR" property="gunMac" />
    <result column="sos_time" jdbcType="TIMESTAMP" property="sosTime" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <association property="apps" javaType="com.ybkj.gun.model.App">
      <!-- <id column="id" jdbcType="INTEGER" property="id" />-->
      <result column="app_phone_type_name" jdbcType="CHAR" property="appPhoneTypeName" />
    </association>
    <association property="guns" javaType="com.ybkj.gun.model.Gun">
      <!-- <id column="id" jdbcType="INTEGER" property="id" />-->
      <result column="gun_id" jdbcType="CHAR" property="gunId" />
      <result column="gun_mac" jdbcType="CHAR" property="gunMac" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, latitude, longitude, gun_imei, gun_mac, sos_time, handle_time, state, create_time, 
    update_time, version
  </sql>
  <select id="selectByExample" parameterType="com.ybkj.gun.model.SosMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sos_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sos_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sos_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ybkj.gun.model.SosMessageExample">
    delete from sos_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ybkj.gun.model.SosMessage">
    insert into sos_message (id, latitude, longitude, 
      gun_imei, gun_mac, sos_time, 
      handle_time, state, create_time, 
      update_time, version)
    values (#{id,jdbcType=INTEGER}, #{latitude,jdbcType=CHAR}, #{longitude,jdbcType=CHAR}, 
      #{gunImei,jdbcType=CHAR}, #{gunMac,jdbcType=CHAR}, #{sosTime,jdbcType=TIMESTAMP},
      #{handleTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ybkj.gun.model.SosMessage">
    insert into sos_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="gunImei != null">
        gun_imei,
      </if>
      <if test="gunMac != null">
        gun_mac,
      </if>
      <if test="sosTime != null">
        sos_time,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=CHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=CHAR},
      </if>
      <if test="gunImei != null">
        #{gunImei,jdbcType=CHAR},
      </if>
      <if test="gunMac != null">
        #{gunMac,jdbcType=CHAR},
      </if>
      <if test="sosTime != null">
        #{sosTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ybkj.gun.model.SosMessageExample" resultType="java.lang.Long">
    select count(*) from sos_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sos_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=CHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=CHAR},
      </if>
      <if test="record.gunImei != null">
        gun_imei = #{record.gunImei,jdbcType=CHAR},
      </if>
      <if test="record.gunMac != null">
        gun_mac = #{record.gunMac,jdbcType=CHAR},
      </if>
      <if test="record.sosTime != null">
        sos_time = #{record.sosTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sos_message
    set id = #{record.id,jdbcType=INTEGER},
      latitude = #{record.latitude,jdbcType=CHAR},
      longitude = #{record.longitude,jdbcType=CHAR},
      gun_imei = #{record.gunImei,jdbcType=CHAR},
      gun_mac = #{record.gunMac,jdbcType=CHAR},
      sos_time = #{record.sosTime,jdbcType=TIMESTAMP},
      handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ybkj.gun.model.SosMessage">
    update sos_message
    <set>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=CHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=CHAR},
      </if>
      <if test="gunImei != null">
        gun_imei = #{gunImei,jdbcType=CHAR},
      </if>
      <if test="gunMac != null">
        gun_mac = #{gunMac,jdbcType=CHAR},
      </if>
      <if test="sosTime != null">
        sos_time = #{sosTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ybkj.gun.model.SosMessage">
    update sos_message
    set latitude = #{latitude,jdbcType=CHAR},
      longitude = #{longitude,jdbcType=CHAR},
      gun_imei = #{gunImei,jdbcType=CHAR},
      gun_mac = #{gunMac,jdbcType=CHAR},
      sos_time = #{sosTime,jdbcType=TIMESTAMP},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--=Start selectSosMessageAll 查询警告信息列表:枪号 -->
  <select id="selectSosMessageAll" resultMap="BaseResultMap">
    SELECT
    sm.id,
    g.gun_id,
    sm.gun_mac,
    sm.longitude,
    sm.latitude,
    sm.sos_time,
    sm.state,
    sm.gun_imei
    FROM
    sos_message AS sm
    LEFT JOIN gun AS g
    ON sm.gun_imei = g.gun_imei and sm.exception_id=8
    <where>
      <if test="gunCode != null and gunCode !=''">
        g.gun_id like '%' #{gunCode} '%'
      </if>
    </where>
    ORDER BY sm.create_time
  </select>
  <!--=End selectSosMessageAll 查询警告信息列表:枪号 -->
</mapper>